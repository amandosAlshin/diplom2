{"version":3,"sources":["store/action-types.js","store/reducers/student.js","store/reducers/index.js","store/index.js","utils/request.js","api/submit.js","store/actions/student.js","views/Exam.js","api/question.js","views/SignIn.js","api/user.js","router/index.js","App.js","reportWebVitals.js","index.js"],"names":["USER_SET_STUDENT_INFO","USER_RESET_STUDENT","initStudentInfo","name","surname","studentId","combineReducers","student","state","action","type","types","composeEnhancers","composeWithDevTools","features","pause","lock","persist","export","import","jump","skip","reorder","dispatch","test","store","createStore","reducer","applyMiddleware","reduxThunk","service","axios","create","baseURL","process","timeout","interceptors","request","use","config","error","console","log","Promise","reject","response","status","saveResult","data","url","method","setStudentInfo","userInfo","useStyles","makeStyles","theme","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","menuButton","marginRight","menuButtonHidden","title","flexGrow","appBarSpacer","content","height","overflow","formControl","margin","spacing","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","question","connect","resetUser","props","classes","React","useState","open","setOpen","stateQ","setStateQ","questions","setQuestion","loading","setLoading","answer","setAnswer","getQuestionsList","a","result","arr","i","length","push","answerChange","e","ans","target","value","endChange","useEffect","className","CssBaseline","AppBar","position","Toolbar","IconButton","edge","color","aria-label","onClick","clsx","Typography","align","component","variant","noWrap","Button","Container","maxWidth","Card","CardContent","LinearProgress","style","textAlign","FormControl","answers","map","item","FormControlLabel","id","control","Radio","onChange","label","index","changeQ","questionId","marginTop","avatar","backgroundColor","palette","secondary","main","form","width","submit","instStudent","resolve","then","msg","catch","useRef","Avatar","onSubmit","preventDefault","handleLogin","current","noValidate","TextField","inputRef","required","fullWidth","autoComplete","autoFocus","disabled","Router","path","render","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64fcf7c1.chunk.js","sourcesContent":["export const USER_SET_STUDENT_INFO = \"USER_SET_STUDENT_INFO\";\nexport const USER_RESET_STUDENT = \"USER_RESET_STUDENT\";\n","import * as types from \"../action-types\";\nconst initStudentInfo = {\n  name: \"\",\n  surname: \"\",\n  studentId: \"\"\n};\nexport default function student(state = initStudentInfo, action) {\n  switch (action.type) {\n    case types.USER_SET_STUDENT_INFO:\n      return {\n        ...state,\n        name: action.name,\n        surname: action.surname,\n        studentId: action.studentId,\n      };\n    case types.USER_RESET_STUDENT:\n      return {};\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport student from \"./student\";\n\nexport default combineReducers({\n    student\n});\n","import { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reduxThunk from 'redux-thunk'\nimport reducer from './reducers'\nconst composeEnhancers = composeWithDevTools({\n    features: {\n      pause: true, // start/pause recording of dispatched actions\n      lock: false, // lock/unlock dispatching actions and side effects    \n      persist: true, // persist states on page reloading\n      export: true, // export history of actions in a file\n      import: 'custom', // import history of actions from a file\n      jump: true, // jump back and forth (time travelling)\n      skip: true, // skip (cancel) actions\n      reorder: true, // drag and drop actions in the history list \n      dispatch: true, // dispatch custom actions or action creators\n      test: true // generate tests for the selected actions\n    },\n    // other options like actionSanitizer, stateSanitizer\n  });\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(reduxThunk)));\n\nexport default store","import axios from \"axios\";\n\n//axios құру\nconst service = axios.create({\n  baseURL: process.env.REACT_APP_BASE_API, // api server сілтемесі\n  timeout: 5000, // request timeout\n});\n\n// сұрау\nservice.interceptors.request.use(\n  (config) => {\n    return config;\n  },\n  (error) => {\n    console.log(error); // for debug\n    Promise.reject(error);\n  }\n);\n\n// жауап\nservice.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    console.log(\"err\" + error); // for debug\n    const { status } = error.response;\n    console.log(status)\n    return Promise.reject(error);\n  }\n);\n\nexport default service;\n","import request from '../utils/request'\n\nexport function saveResult(data) {\n  return request({\n    url: '/exam/student/save-result',\n    method: 'post',\n    data\n  })\n}","import * as types from \"../action-types\";\nimport { reqInstStudent} from \"../../api/user\";\n\nexport const instStudent = (name,surname) =>(dispatch)=>  {\n  return new Promise((resolve, reject) => {\n    reqInstStudent({name, surname})\n      .then((response) => {\n        const { data } = response;\n        if (data.type === \"ok\") {\n          const userInfo = data;\n          dispatch(setStudentInfo(userInfo));\n          resolve(data);\n        } else {\n          const msg = data.msg;\n          reject(msg);\n        }\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\n\nexport const setStudentInfo = (userInfo) => {\n  return {\n    type: types.USER_SET_STUDENT_INFO,\n    name: userInfo.name,\n    surname: userInfo.surname,\n    studentId: userInfo.studentId\n  };\n};\n\nexport const resetUser = () => {\n  return {\n    type: types.USER_RESET_STUDENT,\n  };\n};\n","import React,{useEffect} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Button from '@material-ui/core/Button';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { connect } from \"react-redux\";\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { questionList } from \"../api/question\";\nimport { saveResult } from \"../api/submit\";\nimport { resetUser} from \"../store/actions\";\n\nconst useStyles = makeStyles((theme) => ({    \n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  \n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  formControl: {\n    margin: theme.spacing(3),\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n  question: {\n    '& > *': {\n        margin: theme.spacing(1),\n      },\n  }\n}));\n\n\nfunction Exam(props) {\n  const {resetUser} = props;\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const [stateQ, setStateQ] = React.useState(0);\n  const [questions, setQuestion] = React.useState(0);\n  const [loading, setLoading] = React.useState(0);\n  const [answer, setAnswer] = React.useState([]);\n  \n\n  const changeQ = (index)=>{\n    setStateQ(index)\n  }\n\n  const getQuestionsList = async () => {\n    setLoading(true);\n    const result = await questionList()\n    const { data } = result;\n      if (data.type === \"ok\") {\n        setLoading(false);\n        \n        let arr = []\n        for(let i = 0; i<data.questions.length; i++){\n            arr.push(0)   \n        }\n        setAnswer(arr)\n        setQuestion(data.questions);\n      }\n  }\n\n  const answerChange=(e)=>{\n    let ans = answer;\n    ans[stateQ] = e.target.value\n    setAnswer(ans)\n  }\n  const endChange = async ()=>{\n    setLoading(true);\n    const result = await saveResult({studentId: props.studentId,data: answer})\n    const { data } = result;\n      if (data.type === \"ok\") {\n        setLoading(false);\n        resetUser()\n      }\n  }\n\n  useEffect(() => {\n    getQuestionsList();\n  },[]);\n  return (\n    <div className={classes.root}>\n      \n      <CssBaseline />\n      <AppBar position=\"absolute\"   >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography align=\"left\" component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            Сетевые технологиии\n          </Typography>\n         \n          <Button onClick={()=>endChange()} variant=\"contained\" color=\"secondary\">Закончить тест</Button>\n        </Toolbar>\n      </AppBar>  \n      <main className={classes.content}>\n            <div className={classes.appBarSpacer} />\n            <Container maxWidth=\"lg\" className={classes.container}>\n                <Card className={classes.root}>\n                    <CardContent>\n                        {loading ? <LinearProgress /> : false}\n                        <Typography component=\"h1\" variant=\"h2\" align=\"left\" color=\"textPrimary\">\n                            {questions ? questions[stateQ].question : false}\n                        </Typography>\n                        <div style={{margin: \"25px\", textAlign: \"left\"}}>\n                            <FormControl component=\"fieldset\">\n                                    {\n                                        questions? \n                                            questions[stateQ].answers.map(function(item){\n                                                return <FormControlLabel key={item.id}  value={item.id} control={<Radio  onChange={answerChange} value={item.id} />} label={item.answer} />\n                                            })\n                                        : false\n                                    }  \n                            </FormControl>\n                        </div>  \n                    </CardContent>\n                </Card>\n            </Container>\n            <div className={classes.question}>\n                {\n                    questions ? \n                    questions.map((item,index)=>{\n                        return (\n                            <Button onClick={()=>changeQ(index,item.questionId)} key={item.questionId} variant=\"contained\" color=\"primary\">\n                                Вопрос: {index+1}\n                            </Button>\n                        )\n                    })\n                    :false\n                }\n            </div>\n           \n          </main>    \n    </div>\n  );\n}\n\n\nexport default connect((state) => {return state.student}, { resetUser})(\n    Exam\n  );","import request from '../utils/request'\n\nexport function questionList() {\n  return request({\n    url: '/exam/student/question-list',\n    method: 'post'\n  })\n}","import React,{useRef,useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport AssignmentInd from '@material-ui/icons/AssignmentInd';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { connect } from \"react-redux\";\nimport Exam from './Exam'\n//\n\n\nimport { instStudent } from \"../store/actions\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction SignIn(props) {\n\n  const {instStudent,studentId} = props;\n  const [loading, setLoading] = useState(false);\n  \n  const classes = useStyles();\n  \n  let surname = useRef(null);\n  let name = useRef(null);\n  \n  const handleLogin = (name, surname) => {\n    setLoading(true);\n    instStudent(name, surname).then((data) => {\n          setLoading(false)\n      })\n      .catch((error) => {\n        setLoading(false);\n        console.log(error)\n      });\n  };\n\n  const startExam = (e)=>{\n    e.preventDefault()\n    handleLogin(name.current.value,surname.current.value)\n  }\n  if (studentId) {\n    return <Exam/>;\n  }\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <AssignmentInd />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Сетевые технологиии\n        </Typography>\n        <form onSubmit={startExam} className={classes.form} noValidate>\n          <TextField\n            inputRef={surname}\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"surname\"\n            label=\"Фамилия\"\n            name=\"surname\"\n            autoComplete=\"surname\"\n            autoFocus\n          />\n          <TextField\n            inputRef={name}\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"firstname\"\n            label=\"Имя\"\n            name=\"firstname\"\n            autoComplete=\"firstname\"\n            autoFocus\n          />\n          <Button\n            disabled={loading}\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"secondary\"\n            className={classes.submit}\n          >\n            Начать\n          </Button>\n          \n        </form>\n      </div>\n    </Container>\n  );\n}\nexport default connect((state) => {return state.student}, { instStudent })(\n  SignIn\n);","import request from '../utils/request'\n\nexport function reqInstStudent(data) {\n  return request({\n    url: '/exam/student/add',\n    method: 'post',\n    data\n  })\n}","import React from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\n\nimport SignIn from '../views/SignIn'\nimport Exam from '../views/Exam'\n\nexport default function Router(props){\n    return (\n      <HashRouter>\n        <Switch>\n          <Route \n            path=\"/\"\n            render={() => {\n              if (!props.studentId) {\n                return <SignIn />;\n              } else {\n                return <Exam />;\n              }\n            }}\n          />\n        </Switch>\n      </HashRouter>\n    );\n}","import './App.css';\nimport React from 'react';\nimport store from \"./store\";\nimport Router from \"./router\";\nimport { Provider } from \"react-redux\";\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router />\n    </Provider>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}